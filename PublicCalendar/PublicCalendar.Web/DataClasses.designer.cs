#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PublicCalendar.Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Utilities")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["UtilitiesConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Calendar> Calendars
		{
			get
			{
				return this.GetTable<Calendar>();
			}
		}
		
		public System.Data.Linq.Table<DailyOTRate_CN> DailyOTRate_CNs
		{
			get
			{
				return this.GetTable<DailyOTRate_CN>();
			}
		}
		
		public System.Data.Linq.Table<DailyOTRate_MA> DailyOTRate_MAs
		{
			get
			{
				return this.GetTable<DailyOTRate_MA>();
			}
		}
		
		public System.Data.Linq.Table<DailyOTRate_HK> DailyOTRate_HKs
		{
			get
			{
				return this.GetTable<DailyOTRate_HK>();
			}
		}
	}
	
	[Table(Name="dbo.Calendar")]
	[DataContract()]
	public partial class Calendar
	{
		
		private string _CountryCode;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Desc;
		
		private string _PH;
		
		public Calendar()
		{
		}
		
		[Column(Storage="_CountryCode", DbType="VarChar(10)")]
		[DataMember(Order=1)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this._CountryCode = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Name="[Desc]", Storage="_Desc", DbType="NVarChar(500)")]
		[DataMember(Order=3)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		
		[Column(Storage="_PH", DbType="VarChar(10)")]
		[DataMember(Order=4)]
		public string PH
		{
			get
			{
				return this._PH;
			}
			set
			{
				if ((this._PH != value))
				{
					this._PH = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DailyOTRate_CN")]
	[DataContract()]
	public partial class DailyOTRate_CN
	{
		
		private System.DateTime _WorkDate;
		
		private string _WeekDay;
		
		private decimal _WorkHours;
		
		private string _OTRate;
		
		private System.Nullable<char> _HolidayFlag;
		
		private char _DateStatus;
		
		private string _Remarks;
		
		public DailyOTRate_CN()
		{
		}
		
		[Column(Storage="_WorkDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=1)]
		public System.DateTime WorkDate
		{
			get
			{
				return this._WorkDate;
			}
			set
			{
				if ((this._WorkDate != value))
				{
					this._WorkDate = value;
				}
			}
		}
		
		[Column(Storage="_WeekDay", DbType="NVarChar(3)")]
		[DataMember(Order=2)]
		public string WeekDay
		{
			get
			{
				return this._WeekDay;
			}
			set
			{
				if ((this._WeekDay != value))
				{
					this._WeekDay = value;
				}
			}
		}
		
		[Column(Storage="_WorkHours", DbType="Decimal(3,1) NOT NULL")]
		[DataMember(Order=3)]
		public decimal WorkHours
		{
			get
			{
				return this._WorkHours;
			}
			set
			{
				if ((this._WorkHours != value))
				{
					this._WorkHours = value;
				}
			}
		}
		
		[Column(Storage="_OTRate", DbType="Char(5)")]
		[DataMember(Order=4)]
		public string OTRate
		{
			get
			{
				return this._OTRate;
			}
			set
			{
				if ((this._OTRate != value))
				{
					this._OTRate = value;
				}
			}
		}
		
		[Column(Storage="_HolidayFlag", DbType="Char(1)")]
		[DataMember(Order=5)]
		public System.Nullable<char> HolidayFlag
		{
			get
			{
				return this._HolidayFlag;
			}
			set
			{
				if ((this._HolidayFlag != value))
				{
					this._HolidayFlag = value;
				}
			}
		}
		
		[Column(Storage="_DateStatus", DbType="Char(1) NOT NULL")]
		[DataMember(Order=6)]
		public char DateStatus
		{
			get
			{
				return this._DateStatus;
			}
			set
			{
				if ((this._DateStatus != value))
				{
					this._DateStatus = value;
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(400)")]
		[DataMember(Order=7)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DailyOTRate_MA")]
	[DataContract()]
	public partial class DailyOTRate_MA
	{
		
		private System.DateTime _WorkDate;
		
		private string _WeekDay;
		
		private decimal _WorkHours;
		
		private string _OTRate;
		
		private System.Nullable<char> _HolidayFlag;
		
		private char _DateStatus;
		
		private string _Remarks;
		
		public DailyOTRate_MA()
		{
		}
		
		[Column(Storage="_WorkDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=1)]
		public System.DateTime WorkDate
		{
			get
			{
				return this._WorkDate;
			}
			set
			{
				if ((this._WorkDate != value))
				{
					this._WorkDate = value;
				}
			}
		}
		
		[Column(Storage="_WeekDay", DbType="NVarChar(3)")]
		[DataMember(Order=2)]
		public string WeekDay
		{
			get
			{
				return this._WeekDay;
			}
			set
			{
				if ((this._WeekDay != value))
				{
					this._WeekDay = value;
				}
			}
		}
		
		[Column(Storage="_WorkHours", DbType="Decimal(3,1) NOT NULL")]
		[DataMember(Order=3)]
		public decimal WorkHours
		{
			get
			{
				return this._WorkHours;
			}
			set
			{
				if ((this._WorkHours != value))
				{
					this._WorkHours = value;
				}
			}
		}
		
		[Column(Storage="_OTRate", DbType="Char(5)")]
		[DataMember(Order=4)]
		public string OTRate
		{
			get
			{
				return this._OTRate;
			}
			set
			{
				if ((this._OTRate != value))
				{
					this._OTRate = value;
				}
			}
		}
		
		[Column(Storage="_HolidayFlag", DbType="Char(1)")]
		[DataMember(Order=5)]
		public System.Nullable<char> HolidayFlag
		{
			get
			{
				return this._HolidayFlag;
			}
			set
			{
				if ((this._HolidayFlag != value))
				{
					this._HolidayFlag = value;
				}
			}
		}
		
		[Column(Storage="_DateStatus", DbType="Char(1) NOT NULL")]
		[DataMember(Order=6)]
		public char DateStatus
		{
			get
			{
				return this._DateStatus;
			}
			set
			{
				if ((this._DateStatus != value))
				{
					this._DateStatus = value;
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(400)")]
		[DataMember(Order=7)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DailyOTRate_HK")]
	[DataContract()]
	public partial class DailyOTRate_HK
	{
		
		private System.DateTime _WorkDate;
		
		private string _WeekDay;
		
		private decimal _WorkHours;
		
		private string _OTRate;
		
		private System.Nullable<char> _HolidayFlag;
		
		private char _DateStatus;
		
		private string _Remarks;
		
		public DailyOTRate_HK()
		{
		}
		
		[Column(Storage="_WorkDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=1)]
		public System.DateTime WorkDate
		{
			get
			{
				return this._WorkDate;
			}
			set
			{
				if ((this._WorkDate != value))
				{
					this._WorkDate = value;
				}
			}
		}
		
		[Column(Storage="_WeekDay", DbType="NVarChar(3)")]
		[DataMember(Order=2)]
		public string WeekDay
		{
			get
			{
				return this._WeekDay;
			}
			set
			{
				if ((this._WeekDay != value))
				{
					this._WeekDay = value;
				}
			}
		}
		
		[Column(Storage="_WorkHours", DbType="Decimal(3,1) NOT NULL")]
		[DataMember(Order=3)]
		public decimal WorkHours
		{
			get
			{
				return this._WorkHours;
			}
			set
			{
				if ((this._WorkHours != value))
				{
					this._WorkHours = value;
				}
			}
		}
		
		[Column(Storage="_OTRate", DbType="Char(5)")]
		[DataMember(Order=4)]
		public string OTRate
		{
			get
			{
				return this._OTRate;
			}
			set
			{
				if ((this._OTRate != value))
				{
					this._OTRate = value;
				}
			}
		}
		
		[Column(Storage="_HolidayFlag", DbType="Char(1)")]
		[DataMember(Order=5)]
		public System.Nullable<char> HolidayFlag
		{
			get
			{
				return this._HolidayFlag;
			}
			set
			{
				if ((this._HolidayFlag != value))
				{
					this._HolidayFlag = value;
				}
			}
		}
		
		[Column(Storage="_DateStatus", DbType="Char(1) NOT NULL")]
		[DataMember(Order=6)]
		public char DateStatus
		{
			get
			{
				return this._DateStatus;
			}
			set
			{
				if ((this._DateStatus != value))
				{
					this._DateStatus = value;
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(400)")]
		[DataMember(Order=7)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
